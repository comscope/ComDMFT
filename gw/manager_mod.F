      module manager_mod
      logical :: bandplot,     ! If .true. generate the band structure data
     &           complex_ro,
     &           core_mt,
     &           dosplot,      ! If .true. generate the density of states data
     &           el_gas,
     &	         full_vertex_p,
     &	         full_vertex_sigma,
     &	         l_double_freq,
     &	         l_double_tau,
     &           real_things,
     &           rel_interst,
     &           restart,       ! If .true. restart an old calculation
     &           we_need_pol,
     &           we_need_v
	character*3 :: chi_cmp,
     &	             k_line,
     &	             rad_solver,
     &	             ubi,
     &               ubi_0,
     &               ubi_00,
     &               w_sc_gw,
     &               w_sc_qp
	character*40 :: mem_where
	character*72 :: allfile,
     &                dosfile,
     &                outfile,
     &                rstfile,
     &                text,
     $                checkpoint_dir
	integer :: ic_nu_old,
     &           ic_omega_old,
     &           iexch,
     &           ilda,
     &           interp_nu_d,
     &           interp_omega_d,
     &           iprn,
     &           irel,
     &           irel_core,
     &           iter,
     &           iter_dft,
     &           iter_gw,
     &           iter_hf,
     &           iter_h_ext,
     &           iter_max_scf,
     &           iter_qp,
     &           iter_rad,
     &           iter_val,
     &           iter_restart, ! Stores the first iteration in a restart
                               ! calculation. If iter==iter_restart then
                               ! we need to restore the state of the
                               ! calculation.
     &           itest,
     &           iun,
     &           cun,        
     &           k_minus_k_num,
     &           k_minus_k_num_c,
     &           lmax_leg,
     &           magn,
     &           maxylm,
     &           mod_big,
     &           n_as_nu_old,
     &           n_bnd_mu,
     &           n_cont_frac,
     &	         n_nu,
     &           n_nu_asy,
     &	         n_nu_d,
     &           n_nu_exa,
     &           n_nu_maz,
     &           n_nu_rax,
     &	         n_omega,
     &	         n_omega_asy,
     &	         n_omega_d,
     &	         n_omega_exa,
     &	         n_omega_maz,
     &	         n_omega_pol,
     &           n_tau,
     &           n_tau_int,
     &           ncheb_nu_old,
     &           ncheb_omega_old,
     &           nloc,
     &           np_spline,
     &           nrel,
     &           nrel_core,
     &           nspin,
     &           nspin_0,
     &           nspin_1,
     &           nspmag,
     &           v_choise,
     &           v_coul_set
	real*8 ::  acc_it_gw,
     &	         adm_gw,
     &           admix,
     &           admix_e,
     &           admix_rad,
     &           adspin,
     &           alf_tau,
     &           b_ext(3),
     &           b_extval,
     &           betta_t,
     &           chem_pot,
     &           chem_pot_old,        
     &           chem_pot_0,
     &           chem_pot_1,
     &           chem_pot_2,
     &           chem_pot_lda,
     &           chem_pot_qp,
     &           cutoffgw,
     &           e_small,
     &           eps_bs_iter,
     &           eps_pb,
     &           mem_max,
     &           mem_using,
     &           nelec,
     &           nu_max,
     &    	     omega_inf,
     &    	     omega_max,
     &           scal_spin,
     &           sumspinz,
     &           temperature
	integer, allocatable :: ind_nu_d(:),
     &	                      ind_nu_int(:),
     &	                      ind_nu_work(:,:),
     &	                      ind_omega_d(:),
     &	                      ind_omega_int(:),
     &	                      indxcg(:),
     & 	                      indxcgr(:,:,:,:),
     &                        jcg(:),
     &                        jcgr(:),
     &                        k_minus_k(:,:),
     &                        k_minus_k_c(:,:),
     &                        lm_tild(:),
     &                        mats_num_nu(:),
     &                        mats_num_omega(:),
     &                        n_bound_tau(:),
     &                        n_tau1(:)
	real*8, allocatable :: ab_nu_from_tau(:,:,:),
     &	                     ab_omega_from_tau(:,:,:),
     &	                     abc_nu_interp(:,:,:,:),
     &	                     abc_omega_interp(:,:,:,:),
     &	                     asy_nu_interp(:,:,:),
     &	                     asy_omega_interp(:,:,:),
     &	                     asy_omega_interp_corr(:,:,:),
     &	                     bett(:),
     &                       df_dtau_0(:),
     &                       db_dtau_omega(:),
     &                       et_sum_nu(:),
     &                       et_sum_sc_gc(:),
     &                       et_sum_sc_gx(:),
     &	                     cg(:),
     &	                     cheb_matr_nu(:,:),
     &	                     cheb_matr_omega(:,:),
     &	                     cheb_matr_omega_bar(:,:,:,:),
     &	                     cheb_nu(:,:),
     &	                     cheb_omega(:,:),
     &	                     cheb_tau_even(:,:),
     &	                     cheb_tau_odd(:,:),
     &	                     ckg2(:,:,:),
     &                       gaunt(:,:,:),
     &                       nu_work(:,:),
     &                       sum_nu_asy(:,:,:),
     &                       sums_nu_asymp(:,:),
     &                       sum_omega_asy(:,:,:),
     &                       sums_omega_asymp(:,:,:),
     &                       tau_from_nu(:,:,:),
     &                       tau_from_nu_d(:,:,:),
     &                       tau_from_omega(:,:,:),
     &                       tau_mesh(:),
     &                       tau_nu_from_tau_tau(:,:,:,:,:,:),
     &                       tau_omega_from_tau_tau(:,:,:,:,:,:),
     &                       tau1_mesh(:,:),
     &                       w_nu(:),
     &                       w_nu_d(:),
     &                       w_nu_rax(:),
     &                       w_omega(:),
     &                       w_omega_d(:),
     &                       w_omega_pol(:)
	complex*16, allocatable :: cgr(:)	
      end
